***155***
 def __init__(self):
        """
        initialize your data structure here.
        """
        self.stack=[]
        self.min_stack=[]

    def push(self, x):
        """
        :type x: int
        :rtype: None
        """
        self.stack.append(x)
        if not self.min_stack or self.min_stack[-1]>=x:
            self.min_stack.append(x)

    def pop(self):
        """
        :rtype: None
        """
        item=self.stack.pop()
        if item==self.min_stack[-1]:
            return self.min_stack.pop()

    def top(self):
        """
        :rtype: int
        """
        return self.stack[-1]

    def getMin(self):
        """
        :rtype: int
        """
        
        return self.min_stack[-1]


***168*** samilar as 171
result,num="",n
        while num:
            result+=chr((num-1)%26+ord("A"))
            num=(num-1)//26
        return result[::-1]
            
       
***169***
d={}
        for i in nums:
            if i not in d:
                d[i]=1
            else:
                d[i]+=1
        for j in d:
            if d[j] > len(nums)/2:
                return j


***171***
result=0
        for i in range(len(s)):
            result*=26
            result+=ord(s[i])-ord("A")+1
        return result


***172***
c=0
        while n!=0:
            c+=n//5
            n=n//5
        return c
        
