***33***
if len(nums)==0:
            return -1
        l=0
        r=len(nums)-1
        while l+1<r:
            m=(r-l)//2+l
            if nums[m]==target:
                return m
            if nums[m]>nums[l]:
                if target>=nums[l] and nums[m]>=target:
                    r=m
                else:
                    l=m
            else:
                if target<=nums[r] and nums[m]<=target:
                    l=m
                else:
                    r=m
        if nums[l]==target:
            return l
        if nums[r]==target:
            return r       
        return -1
        

***34***
if len(nums)==0:
            return [-1,-1]
        if len(nums)==1:
            if nums[0]==target:
                return [0,0]
            else:
                return [-1,-1]
        l=0
        r=len(nums)-1
        
        while l<=r:
            m=(r-l)//2+l
            
            if nums[m]==target:
                if m<len(nums)-1:
                    i=m
                    j=m
                    while i>=0 and nums[i]==target:
                        i-=1
                    while j<=len(nums)-1 and nums[j]==target:
                        j+=1
                    return [i+1,j-1]
                elif m==len(nums)-1:
                    i=m-1
                    while i>=0 and nums[i]==target:
                        i-=1
                    return [i+1,m]
            elif nums[m]>target:
                r=m-1
            else:
                l=m+1
        return [-1,-1]
        
        
***35***
l,r=0,len(nums)-1
        while l<=r:
            m=l+(r-l)//2
            if nums[m]==target:
                return m
            elif nums[m]>target:
                r=m-1
            elif nums[m]<target:
                l=m+1
        return l
        

 if target>nums[len(nums)-1]:
            return len(nums)
        for i in range(len(nums)):
            if nums[i]>=target:
                return i


stack=[]
        if nums[0]>target:
            return 0
        if nums[-1]<target:
            return len(nums)
        for i in range(len(nums)):
            if nums[i]<target:
                stack.append(i)
            elif nums[i]==target:
                return i
            else:
                return stack.pop()+1

                
***38***
seq="1"
        for i in range(n-1):
            seq=self.f(seq)
        return seq
    def f(self,seq):
        j=0
        seq1=""
        while j < len(seq):
            
            c=1
            while j < len(seq)-1 and seq[j]==seq[j+1]:
                c+=1
                j+=1
            seq1+=str(c)+seq[j]
            j+=1
        return seq1
                
                
***58***
if not s:
            return 0
        if not s.split():
            return 0
        else:
            x=s.split()            
            print(x)
            a=x[-1]
            return len(a)
            
